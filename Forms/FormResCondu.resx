<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxRes.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>